name: ChatOps Apply (diff / replace / append / delete)

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: read
  pull-requests: read

concurrency:
  group: chatops-apply
  cancel-in-progress: false

jobs:
  apply:
    # Odpalamy tylko gdy w komentarzu jest jedna z komend
    if: contains(github.event.comment.body, 'apply-diff') ||
        startsWith(github.event.comment.body, '/replace-file ') ||
        startsWith(github.event.comment.body, '/append-to ')  ||
        startsWith(github.event.comment.body, '/delete-file ')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Parse comment → przygotuj payloady
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = context.payload.comment.body || '';

            // helper: bierz pierwszy fenced code block ``` ... ```
            function takeFenced() {
              const m = body.match(/```[\s\S]*?```/);
              if (!m) return null;
              return m[0].replace(/^```[^\n]*\n/, '').replace(/\n```$/, '');
            }

            // tryby
            if (body.includes('apply-diff')) {
              const code = takeFenced();
              if (!code) core.setFailed('Brak fenced code block z diffem.');
              fs.writeFileSync('patch.diff', code);
              core.setOutput('mode', 'diff');
            } else if (body.startsWith('/replace-file ')) {
              const path = body.split('\n')[0].replace('/replace-file','').trim();
              const code = takeFenced();
              if (!path) core.setFailed('Brak ścieżki w /replace-file');
              fs.mkdirSync(require('path').dirname(path), { recursive: true });
              fs.writeFileSync(path, code ?? '');
              core.setOutput('mode','replace');
              core.setOutput('path', path);
            } else if (body.startsWith('/append-to ')) {
              const path = body.split('\n')[0].replace('/append-to','').trim();
              const code = takeFenced() ?? '';
              fs.mkdirSync(require('path').dirname(path), { recursive: true });
              fs.appendFileSync(path, code);
              core.setOutput('mode','append');
              core.setOutput('path', path);
            } else if (body.startsWith('/delete-file ')) {
              const path = body.split('\n')[0].replace('/delete-file','').trim();
              try { fs.unlinkSync(path); } catch(e) { /* OK jeśli brak */ }
              core.setOutput('mode','delete');
              core.setOutput('path', path);
            }

      - name: Apply diff
        if: steps.parse.outputs.mode == 'diff'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git apply --whitespace=nowarn patch.diff
          git add -A
          git commit -m "chatops: apply-diff from #${{ github.event.issue.number }}"
          git push

      - name: Commit changes (replace/append/delete)
        if: steps.parse.outputs.mode != 'diff'
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A || true
          if [ -n "$(git status --porcelain)" ]; then
            git commit -m "chatops: ${{ steps.parse.outputs.mode }} ${{ steps.parse.outputs.path }} from #${{ github.event.issue.number }}"
            git push
          else
            echo "No changes to commit."
          fi
